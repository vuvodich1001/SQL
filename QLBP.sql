CREATE DATABASE QLPB
USE QLPB
GO
CREATE TABLE EMPLOYEE(
	EMPNO INT,
	EMPNAME VARCHAR(30),
	BIRTHDAY SMALLDATETIME,
	DEPTNO INT,
	MGRNO INT NOT NULL,
	STARTDATE SMALLDATETIME,
	SALARY MONEY,
	LEVEL INT,
	STATUS INT,
	NOTE VARCHAR(5),
	CONSTRAINT PK_EMPLOYEE PRIMARY KEY(EMPNO),
	CONSTRAINT CHK_LEVEL CHECK(LEVEL BETWEEN 1 AND 7),
	CONSTRAINT CHK_STATUS CHECK(STATUS IN ('0', '1', '2'))
)

CREATE TABLE EMP_SKILL(
	SKILLNO INT,
	EMPNO INT,
	SKILLLEVEL INT,
	REGDATE SMALLDATETIME,
	DESCRIPTION VARCHAR(50),
	CONSTRAINT PK_EMP_SKILL PRIMARY KEY(SKILLNO, EMPNO),
	CONSTRAINT CHK_SKILLLEVEL CHECK(SKILLLEVEL BETWEEN 1 AND 3),
	CONSTRAINT FK_EMP_SKILL FOREIGN KEY(EMPNO) REFERENCES EMPLOYEE(EMPNO)
)

CREATE TABLE SKILL(
	SKILLNO INT IDENTITY(1, 1), 
	SKILLNAME VARCHAR(20),
	NOTE VARCHAR(50),
	CONSTRAINT PK_SKILL PRIMARY KEY(SKILLNO)
)

CREATE TABLE DEPARTMENT(
	DEPTNO INT IDENTITY(1, 1),
	DEPTNAME VARCHAR(20),
	NOTE VARCHAR(50),
	CONSTRAINT PK_DEPARTMENT PRIMARY KEY(DEPTNO)
)
-- 2
-- A
ALTER TABLE EMPLOYEE
ADD EMAIL VARCHAR(5) UNIQUE

-- B
ALTER TABLE EMPLOYEE
ADD CONSTRAINT DF_EMPLOYEE DEFAULT '0' FOR MGRNO

-- 3
-- A
ALTER TABLE EMPLOYEE 
ADD CONSTRAINT FK_EMPLOYEE
FOREIGN KEY(DEPTNO) REFERENCES DEPARTMENT(DEPTNO)

-- B
ALTER TABLE EMP_SKILL
DROP COLUMN DESCRIPTION 

-- 4
-- A
--INSERT VAO TABLE DEPARTMENT
INSERT INTO DEPARTMENT(DEPTNAME, NOTE) VALUES('THUONG MAI', '');
INSERT INTO DEPARTMENT(DEPTNAME, NOTE) VALUES('DIEN TU', '');
INSERT INTO DEPARTMENT(DEPTNAME, NOTE) VALUES('CHUNG KHOAN', '');
INSERT INTO DEPARTMENT(DEPTNAME, NOTE) VALUES('TAI CHINH', '');
INSERT INTO DEPARTMENT(DEPTNAME, NOTE) VALUES('BAT DONG SAN', '');

--INSERT VAO TABLE EMPLOYEE
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL, STATUS, EMAIL)
VALUES(1, 'NGUYEN VAN A','01/01/2000', 1, 1, '2/2/2001', 30000, 3, 1, 'NV1');
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL, STATUS, EMAIL)
VALUES(2, 'NGUYEN VAN B', '1/1/2010', 1, 1, '2/2/2001', 40000, 4, 1, 'NV2');
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL, STATUS, EMAIL)
VALUES(3, 'NGUYEN VAN C', '1/1/2006', 1, 1, '2/2/2001', 50000, 7, 1, 'NV3@');
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL, STATUS, EMAIL)
VALUES(4, 'NGUYEN THI D', '1/1/2001', 1, 1, '2/2/2001', 30000, 1, 1, 'NV4@');
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL, STATUS, EMAIL)
VALUES(5, 'NGUYEN VAN E', '1/1/2007', 1, 1, '2/2/2001', 80000, 5, 1, 'NV5@');

--INSERT VAO TABLE SKILL
INSERT INTO SKILL(SKILLNAME, NOTE) VALUES('CODE', '');
INSERT INTO SKILL(SKILLNAME, NOTE) VALUES('EXECL', '');
INSERT INTO SKILL(SKILLNAME, NOTE) VALUES('WORD', '');
INSERT INTO SKILL(SKILLNAME, NOTE) VALUES('PP', '');
INSERT INTO SKILL(SKILLNAME, NOTE) VALUES('ACESS', '');

--INSERT VAO TABLE EMP_SKILL
INSERT INTO EMP_SKILL(SKILLNO, EMPNO, SKILLLEVEL, REGDATE) VALUES(1, 1, 1 , '1/8/1990');
INSERT INTO EMP_SKILL(SKILLNO, EMPNO, SKILLLEVEL, REGDATE) VALUES(6, 1, 1 , '1/8/1990');
INSERT INTO EMP_SKILL(SKILLNO, EMPNO, SKILLLEVEL, REGDATE) VALUES(2, 1, 1 , '1/5/1991');
INSERT INTO EMP_SKILL(SKILLNO, EMPNO, SKILLLEVEL, REGDATE) VALUES(3, 1, 1 , '1/4/1992');
INSERT INTO EMP_SKILL(SKILLNO, EMPNO, SKILLLEVEL, REGDATE) VALUES(4, 1, 1 , '1/2/1993');
INSERT INTO EMP_SKILL(SKILLNO, EMPNO, SKILLLEVEL, REGDATE) VALUES(5, 1, 1 , '1/1/1995');
-- IMPORT DU LIEU
-- B
GO
CREATE VIEW EMPLOYEE_TRACKING AS
SELECT EMPNO, EMPNAME FROM EMPLOYEE WHERE LEVEL BETWEEN 3 AND 5

-- T-SQL
-- A
-- B
GO
CREATE PROCEDURE PR_UPDATELEVEL 
AS
BEGIN
	UPDATE EMPLOYEE
	SET LEVEL = 2
	WHERE LEVEL = 1 AND DATEDIFF(YEAR, STARTDATE, GETDATE()) >= 3
	SELECT @@ROWCOUNT ROWCHANGE
END
-- THUC THI
EXECUTE PR_UPDATELEVEL

-- C
GO
CREATE PROCEDURE PR_EMPLOYEE_OUT @EMPNO INT
AS
BEGIN
	SELECT E.EMPNAME, E.EMAIL, D.DEPTNAME FROM EMPLOYEE E INNER JOIN DEPARTMENT D ON D.DEPTNO = E.DEPTNO
	WHERE E.EMPNO = @EMPNO AND STATUS = '3'
END
-- THUC THI
EXECUTE PR_EMPLOYEE_OUT 1

-- D
GO
ALTER FUNCTION EMP_TRACKING (@EMPNO INT)
RETURNS MONEY
BEGIN
	DECLARE @SALARY MONEY
	SELECT @SALARY = SALARY FROM EMPLOYEE WHERE EMPNO = @EMPNO AND STATUS = '1'
	RETURN @SALARY
END
-- THUC THI(THEM DBO. PHIA TRUOC FUNCTION)
SELECT DBO.EMP_TRACKING(5) AS LUONG

-- E
--Trigger nay cho insert 1 dong du lieu vao database
GO
CREATE TRIGGER TRS_EMPLOYEE  ON EMPLOYEE
FOR INSERT, UPDATE
AS
BEGIN
	DECLARE @LEVEL INT, @SALARY MONEY
	SELECT @LEVEL = LEVEL, @SALARY = SALARY FROM INSERTED
	IF(@LEVEL = '1' AND @SALARY > 10000000)
	BEGIN
	 PRINT'LOI! KHONG HOP LE'
	 ROLLBACK TRAN
	END
	ELSE
		PRINT'THANH CONG'
END
DROP TRIGGER TRS_EMPLOYEE
-- THUC THI
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL, STATUS, EMAIL)
VALUES(6, 'NGUYEN VAN E', '1/1/2007', 1, 1, '2/2/2001', 8000000, 1, 1, 'NV6@');

SELECT * FROM EMPLOYEE
--Trigger nay cho viec insert nhieu dong du lieu vao database(neu 1 dong 1  loi thi khong insert bat cu dong nao)
GO
CREATE TRIGGER TRS_EMPLOYEE ON EMPLOYEE
FOR INSERT, UPDATE
AS 
BEGIN
	IF((SELECT COUNT(*) FROM INSERTED WHERE LEVEL = '1' AND SALARY > 10000000) > 0)
		BEGIN
			PRINT'LOI! KHONG HOP LE'
			ROLLBACK TRAN
		END
	ELSE
		PRINT'THANH CONG'
END
DROP TRIGGER TRS_EMPLOYEE
-- THUC THI
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL, STATUS, EMAIL)
VALUES(7, 'NGUYEN VAN E', '1/1/2007', 1, 1, '2/2/2001', 8000000, 1, 1, 'NV7@'),
(8, 'NGUYEN VAN E', '1/1/2007', 1, 1, '2/2/2001', 70000000, 1, 1, 'NV8@'),
(9, 'NGUYEN VAN E', '1/1/2007', 1, 1, '2/2/2001', 6000000, 1, 1, 'NV9@');

SELECT * FROM EMPLOYEE

DELETE FROM EMPLOYEE WHERE EMPNO = 10 OR EMPNO = 8 OR EMPNO = 9
-- Trigger nay cho viec insert dong du lieu hop le vao trong database(con dong du lieu kh hop le se bao loi va rollback tran)
GO
ALTER TRIGGER TRS_EMPLOYEE ON EMPLOYEE
FOR INSERT, UPDATE
AS
BEGIN
	DECLARE @SALARY MONEY, @LEVEL INT
	DECLARE EMP_CURSOR CURSOR FOR 
	SELECT SALARY, LEVEL FROM INSERTED
	OPEN EMP_CURSOR
	FETCH NEXT FROM EMP_CURSOR INTO @SALARY, @LEVEL
	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF(@LEVEL = 1 AND @SALARY > 10000000)
			BEGIN
				PRINT'LOI! KHONG HOP LE'
				ROLLBACK TRAN
			END
		ELSE
			PRINT'THANH CONG'
		FETCH NEXT FROM EMP_CURSOR INTO @SALARY, @LEVEL
	END
	CLOSE EMP_CURSOR
	DEALLOCATE EMP_CURSOR
END
-- THUC THI
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL, STATUS, EMAIL)
VALUES(10, 'NGUYEN VAN E', '1/1/2007', 1, 1, '2/2/2001', 8000000, 1, 1, 'NV10@'),
(8, 'NGUYEN VAN E', '1/1/2007', 1, 1, '2/2/2001', 70000000, 1, 1, 'NV8@'),
(9, 'NGUYEN VAN E', '1/1/2007', 1, 1, '2/2/2001', 6000000, 1, 1, 'NV9@');
SELECT * FROM EMPLOYEE
-- F
GO
DECLARE @EMPNO INT, @SALARY MONEY, @LEVEL INT, @STARTDATE SMALLDATETIME
DECLARE SA_CURSOR CURSOR FOR 
SELECT EMPNO, SALARY, LEVEL, STARTDATE FROM EMPLOYEE 
OPEN SA_CURSOR
FETCH NEXT FROM SA_CURSOR INTO @EMPNO, @SALARY, @LEVEL, @STARTDATE
WHILE @@FETCH_STATUS = 0
BEGIN
	DECLARE @COUNT INT
	SELECT @COUNT = COUNT(*) FROM EMPLOYEE E INNER JOIN EMP_SKILL ES ON E.EMPNO = ES.EMPNO WHERE E.EMPNO = @EMPNO 
	IF(@COUNT > 1 AND @LEVEL = '2' AND DATEDIFF(YEAR, @STARTDATE, GETDATE()) >= 2)
		BEGIN
			UPDATE EMPLOYEE
			SET SALARY += 300000
			WHERE EMPNO = @EMPNO
		END
	ELSE IF(@COUNT > 1 AND @LEVEL = '3' AND DATEDIFF(YEAR, @STARTDATE, GETDATE()) >= 3)	
		BEGIN
			UPDATE EMPLOYEE
			SET SALARY += 500000
			WHERE EMPNO = @EMPNO
		END
	FETCH NEXT FROM SA_CURSOR INTO @EMPNO, @SALARY, @LEVEL, @STARTDATE
END
CLOSE SA_CURSOR
DEALLOCATE SA_CURSOR
